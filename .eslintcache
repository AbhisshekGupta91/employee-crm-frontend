[{"D:\\employee-crm\\src\\index.js":"1","D:\\employee-crm\\src\\reportWebVitals.js":"2","D:\\employee-crm\\src\\Components\\App.js":"3","D:\\employee-crm\\src\\Components\\Login\\Login.js":"4","D:\\employee-crm\\src\\Components\\Registeration\\Registration.js":"5"},{"size":511,"mtime":1611131053480,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":237,"mtime":1611136646709,"results":"9","hashOfConfig":"7"},{"size":1532,"mtime":1611136464241,"results":"10","hashOfConfig":"7"},{"size":10036,"mtime":1611145284188,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"15qsnyr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\employee-crm\\src\\index.js",[],["25","26"],"D:\\employee-crm\\src\\reportWebVitals.js",[],"D:\\employee-crm\\src\\Components\\App.js",["27","28"],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './Login/Login';\nimport  Registration from \"./Registeration/Registration\";\nfunction App() {\n  return (\n  //  <Login />\n    <Registration />\n  );\n}\n\nexport default App;\n","D:\\employee-crm\\src\\Components\\Login\\Login.js",["29"],"import React, { useState } from 'react'\r\n\r\nimport { Button, Form, Container, Row } from 'react-bootstrap';\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    console.log(email, password);\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1>LOGIN PAGE</h1>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => { setEmail(e.target.value) }} />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n            </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                    <Row container>\r\n                        <Row item xs>\r\n                            <a href=\"#\" variant=\"\">Create New User!</a>\r\n                        </Row>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","D:\\employee-crm\\src\\Components\\Registeration\\Registration.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":31,"column":29,"nodeType":"41","endLine":31,"endColumn":52},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]